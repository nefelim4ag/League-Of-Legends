#!/bin/bash
## Logging functions
INFO(){ echo "INFO: $*";}
WARN(){ echo "WARN: $*";}
ERRO(){ echo "ERRO: $*"; exit 1;}

## Check some deps
bin_exist(){ command -v "$1" &> /dev/null || ERRO "Missing ${1}!"; }
for bin in wine winetricks wineserver winepath wineboot; do
    bin_exist $bin
done

## Define useful functions
rm_w(){ rm -f "$1"; }

## Some vars
export CACHE="$HOME/.cache/leagueoflegends/"
export DOWNLOADED_INSTALLER="$CACHE/LoL_installer_NA.exe"

export PREFIXCOMMAND TMP BASE_DIR

export WINEPREFIX WINEARCH
export WINEDLLOVERRIDES="msvcp140=b,n"
export WINE_REQ_MOD=(d3dx9 corefonts)

export INSTALL_PATH
export LOL_CLIENT_BIN="LeagueClient.exe"
export LOL_LAUNCHER_LOG
export LOL_CLIENT_LOG

export CONF=/etc/leagueoflegends.conf

## Check args
case "$1" in
    launcher) : ;;
    winecfg|wineserver|winetricks) : ;;
    tail|make_wineprefix|regen_wine_prefix) : ;;
    cleanup_logs) : ;;
    *)
        echo "League of Legends Launcher wrapper/installer"
        echo "See $CONF"
        echo "Usage: $0 <args>"
        echo "  launcher           - launch lol launcher"
        echo "                       launcher can run old client"
        echo "  winecfg            - run winecfg in lol prefix"
        echo "  wineserver <args>  - -k for killing all processes"
        echo "  winetricks <args>  - run winetricks in lol prefix"
        echo "  tail               - tail -f to log file"
        echo "  make_wineprefix    - only make wineprefix"
        echo "  cleanup_logs       - remove log files in wine prefix"
        echo "  regen_wine_prefix  - backup wine wineprefix, recreate wineprefix"
        exit 1
    ;;
esac

## Initialization
INFO "Load: $CONF"

# shellcheck source=leagueoflegends.conf
source "$CONF" &> /dev/null || ERRO "Missing: ${CONF}!"

if [ ! -f "$HOME/.config/leagueoflegends.conf" ]; then
    cp "$CONF" "$HOME/.config/leagueoflegends.conf"
fi

INFO "Load: $HOME/.config/leagueoflegends.conf"
# shellcheck source=leagueoflegends.conf
source "$HOME/.config/leagueoflegends.conf"

[ -z "$WINEARCH" ]         && WINEARCH=win64
[ -z "$BASE_DIR" ]         && BASE_DIR="$HOME/.local/share/leagueoflegends/"
[ -z "$WINEPREFIX" ]       && WINEPREFIX="${BASE_DIR}WINE.$WINEARCH/"
[ -z "$INSTALL_PATH" ]     && INSTALL_PATH="${BASE_DIR}LOL/"

{
    INFO "Check: Base dir $BASE_DIR"
    mkdir -p "$BASE_DIR"
    INFO "Check: Cache dir $CACHE"
    mkdir -p "$CACHE"
    INFO "Check: Install path: $INSTALL_PATH"
    mkdir -p "$INSTALL_PATH"
}

{
    INFO "Check: wineprefix exist $WINEPREFIX"
    if [ ! -d "$WINEPREFIX" ]; then
        INFO "Wine prefix not exist"
        INFO "So try recreate it"
        env WINEDLLOVERRIDES="mscoree,mshtml=" wineboot -i &> /dev/null
        INFO "Created: $WINEPREFIX"
    fi
    INFO "Last tested version: wine-3.3"
    INFO "Your version: $(wine --version)"
}

{
        INFO "Check: wineprefix configured"
        if [ ! -f "$WINEPREFIX/winetricks.log" ]; then
                winetricks -q --optout "${WINE_REQ_MOD[@]}" || ERRO "Something went wrong!"
        fi
}

{
     INFO "Check: wine sandbox - can access only to wine drive C:/ + X:/ (LoL)"
     for link in "$WINEPREFIX/dosdevices"/*; do
         [[ "$link" =~ c: ]] && continue # For default link to ../drive_c
         [[ "$link" =~ x: ]] && continue # For link to LoL path
         [[ "$link" =~ z: ]] && continue
         rm -v "$link"
     done

    INFO "Check: Link X: -> $INSTALL_PATH"
    ln -Tfsr "$INSTALL_PATH" "$WINEPREFIX/dosdevices/x:"
}

case "$1" in
    make_wineprefix) exit 0;;
    wineserver|winetricks|winecfg)
        ARG="$1"; shift; exec "$ARG" "$@"
    ;;
    cleanup_logs)
        find -H "$BASE_DIR" -name "*.log" -delete -print
        find -H "$INSTALL_PATH/" -name "*.log?" -delete -print
        if [ -d "$INSTALL_PATH/Logs/" ]; then
            find -H "$INSTALL_PATH/Logs/" -type f -delete -print
            find -H "$INSTALL_PATH/Logs/" -empty -delete -print
        fi
        exec truncate -s 0 "$LOL_LAUNCHER_LOG" "$LOL_CLIENT_LOG"
    ;;
    tail)
        touch "$LOL_LAUNCHER_LOG" "$LOL_CLIENT_LOG"
        exec tail -f "$LOL_LAUNCHER_LOG" "$LOL_CLIENT_LOG"
    ;;
esac

{
    INFO "Download installer"
    mkdir -p "$CACHE"
    URL="https://riotgamespatcher-a.akamaihd.net/releases/live/installer/deploy/League%20of%20Legends%20installer%20NA.exe"
    wget -q -c "$URL" -O "$DOWNLOADED_INSTALLER"
}

{
        INFO "Check client installed"
        if find "$INSTALL_PATH" -name "$LOL_CLIENT_BIN" | grep -q "$LOL_CLIENT_BIN"; then
                :
        else
                INFO "Can't find: $LOL_CLIENT_BIN"

                TGT_WINE_PATH="$(winepath -w "$INSTALL_PATH\CLIENT")"

                INFO "Run installer:" "$DOWNLOADED_INSTALLER" --license_agreement 1 --mode unattended --installdir $TGT_WINE_PATH
                wine "$DOWNLOADED_INSTALLER" --license_agreement 1 --mode unattended  --installdir "$TGT_WINE_PATH"
        fi
}

case "$1" in
    regen_wine_prefix)
        [ -d "${WINEPREFIX}.backup" ] && ERRO "Backup of ${WINEPREFIX} already exist"
        INFO "Backup prefix: ${WINEPREFIX}.backup"
        mv "${WINEPREFIX}" "${WINEPREFIX}.backup"
        INFO "Self rerun to recreate wineprefix"
        exec "$0" make_wineprefix
    ;;
esac

INFO "Initialization Finished"

case "$1" in
        launcher)
                INFO "Run launcher"
                LAUNCHER_BIN="$(find "$INSTALL_PATH" -name "LeagueClient.exe" | sort | head -n 1)"
                LAUNCHER_BIN="$(winepath -w "$LAUNCHER_BIN")"
                if [ -z "$PREFIXCOMMAND" ]; then
                        wine "$LAUNCHER_BIN"
                else
                        $PREFIXCOMMAND wine "$LAUNCHER_BIN"
                fi
        ;;
esac
